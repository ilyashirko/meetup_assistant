# Generated by Django 4.0.6 on 2022-08-02 16:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('title', models.CharField(max_length=200, verbose_name='Event title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('finish', models.DateTimeField(verbose_name='Finish')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Last name')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Patronymic')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Company')),
                ('telegram_id', models.SmallIntegerField(verbose_name='Telegram ID')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(blank=True, verbose_name='Answer')),
                ('processed', models.BooleanField(default=True, verbose_name='Processed')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions_from', to='telegram_bot.person', verbose_name='Guest')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions_to', to='telegram_bot.person', verbose_name='Speaker')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('title', models.CharField(max_length=200, verbose_name='Lecture title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(verbose_name='Schedule end')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lectures', to='telegram_bot.event', verbose_name='Event')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lectures', to='telegram_bot.person', verbose_name='Event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='telegram_bot.person', verbose_name='Organizer'),
        ),
    ]
