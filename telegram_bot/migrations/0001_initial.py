# Generated by Django 4.0.6 on 2022-08-02 15:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('title', models.CharField(max_length=200, verbose_name='Event title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('finish', models.DateTimeField(verbose_name='Finish')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('first_name', models.CharField(max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last name')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Patronymic')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Phone number')),
                ('telegram_id', models.SmallIntegerField(verbose_name='Telegram ID')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='telegram_bot.person')),
                ('grade', models.CharField(choices=[('BG', 'beginner'), ('JN', 'junior'), ('MD', 'middle'), ('SR', 'senior'), ('TL', 'team lead'), ('PM', 'project manager')], max_length=50, verbose_name='grade')),
                ('specializations', models.ManyToManyField(related_name='guests', to='telegram_bot.specialization', verbose_name='Specializations')),
            ],
            bases=('telegram_bot.person',),
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='telegram_bot.person')),
            ],
            bases=('telegram_bot.person',),
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='telegram_bot.person')),
            ],
            bases=('telegram_bot.person',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(blank=True, verbose_name='Answer')),
                ('processed', models.BooleanField(default=True, verbose_name='Processed')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='telegram_bot.guest', verbose_name='Guest')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='telegram_bot.speaker', verbose_name='Speaker')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid1, editable=False, max_length=36, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(36)], verbose_name='id')),
                ('title', models.CharField(max_length=200, verbose_name='Lecture title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('schedule_start', models.DateTimeField(verbose_name='Schedule start')),
                ('schedule_end', models.DateTimeField(verbose_name='Schedule end')),
                ('fact_start', models.DateTimeField(blank=True, verbose_name='Fact start')),
                ('fact_end', models.DateTimeField(blank=True, verbose_name='Fact end')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lectures', to='telegram_bot.event', verbose_name='Event')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lectures', to='telegram_bot.speaker', verbose_name='Event')),
            ],
        ),
    ]
